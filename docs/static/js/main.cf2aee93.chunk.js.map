{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.//.*//src//index/.js$","components/Method.tsx","components/Compiler.tsx","components/SmartContracts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Method","props","React","useState","inputs","setInputs","abi","setArgs","useEffect","Form","className","items","item","index","Fragment","Text","name","Control","type","size","placeholder","onChange","event","target","value","JSON","parse","toString","Group","DrawInputs","getFunctions","temp","forEach","element","push","getArguments","args","Compiler","caver","networkId","busy","setBusy","addNewContract","setSelected","updateBalance","initialised","setInitialised","client","setClient","fileName","setFileName","iconSpin","setIconSpin","data","contracts","setContracts","contractName","setContractName","constructor","setConstructor","address","setAddress","error","setError","compile","a","solidity","select","newContracts","element0","element1","newContract","klay","Contract","stringify","getAccounts","accounts","parms","rawTx","from","deploy","evm","bytecode","object","arguments","encodeABI","estimateGas","gas","gasLimit","parseInt","utils","hexToNumber","sendTransaction","txReceipt","contractAddress","console","Contracts","split","length","key","Button","variant","disabled","onClick","copy","InputGroup","as","createClient","onload","on","fn","source","languageVersion","fileManager","getCurrentFile","log","init","block","style","marginRight","Card","Header","Body","Alert","onClose","dismissible","hidden","readOnly","Append","EMPTYLIST","DrawMethod","success","setSuccess","setValue","buttonVariant","stateMutability","value2","Prepend","methods","call","message","to","ContractCard","contract","remove","enable","setEnable","CSSTransition","in","timeout","classNames","unmountOnExit","onExited","substring","window","open","Accordion","Toggle","eventKey","Collapse","DrawMathods","SmartContracts","count","setCount","DrawContracts","Caver","require","App","account","setAccount","balance","setBalance","setNetworkId","klaytn","atAddress","setAtAddress","selected","provider","networkVersion","getBalance","b","fromWei","concat","Container","OverlayTrigger","placement","overlay","Tooltip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf2aee93.chunk.js","sourcesContent":["var map = {\n\t\"./caver-abi/src/index.js\": 102,\n\t\"./caver-account/src/index.js\": 52,\n\t\"./caver-contract/src/index.js\": 65,\n\t\"./caver-core-helpers/src/index.js\": 26,\n\t\"./caver-core-method/src/index.js\": 47,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 262,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 266,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 260,\n\t\"./caver-core-requestmanager/src/index.js\": 257,\n\t\"./caver-core-subscriptions/src/index.js\": 93,\n\t\"./caver-core/src/index.js\": 36,\n\t\"./caver-ipfs/src/index.js\": 285,\n\t\"./caver-kct/src/index.js\": 297,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 300,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 303,\n\t\"./caver-klay/src/index.js\": 304,\n\t\"./caver-middleware/src/index.js\": 163,\n\t\"./caver-net/src/index.js\": 178,\n\t\"./caver-rpc/src/index.js\": 305,\n\t\"./caver-rtm/src/index.js\": 95,\n\t\"./caver-transaction/src/index.js\": 306,\n\t\"./caver-utils/iban/src/index.js\": 253,\n\t\"./caver-utils/promievent/src/index.js\": 252,\n\t\"./caver-utils/src/index.js\": 5,\n\t\"./caver-validator/src/index.js\": 179,\n\t\"./caver-wallet/src/index.js\": 173\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 380;","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { AbiInput, AbiItem } from 'web3-utils';\n\ninterface InterfaceProps {\n\tabi: AbiItem | null;\n\tsetArgs: (name: string, value: string) => void;\n}\n\nconst Method: React.FunctionComponent<InterfaceProps> = (props) => {\n\tconst [inputs, setInputs] = React.useState<AbiInput[]>([]);\n\tconst { abi, setArgs } = props;\n\n\tReact.useEffect(() => {\n\t\tsetInputs(abi && abi.inputs ? abi.inputs : []);\n\t}, [abi]);\n\n\tfunction DrawInputs() {\n\t\tconst items = inputs.map((item: AbiInput, index: number) => (\n\t\t\t<React.Fragment key={index.toString()}>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t<small>{item.name}</small>\n\t\t\t\t</Form.Text>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tname={item.name}\n\t\t\t\t\tplaceholder={item.type}\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\tif (event.target.value[0] === '[') {\n\t\t\t\t\t\t\tsetArgs(event.target.name, JSON.parse(event.target.value));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetArgs(event.target.name, event.target.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t));\n\t\treturn <Form.Group>{items}</Form.Group>;\n\t}\n\n\treturn <Form className=\"Method\">{DrawInputs()}</Form>;\n};\n\nexport default Method;\n","import React from 'react';\nimport { Alert, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { AbiInput, AbiItem } from 'web3-utils';\nimport type { Api } from '@remixproject/plugin-utils';\nimport { Client } from '@remixproject/plugin';\nimport { IRemixApi } from '@remixproject/plugin-api';\nimport { createClient } from '@remixproject/plugin-iframe';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\n\nfunction getFunctions(abi: AbiItem[]): AbiItem[] {\n\tconst temp: AbiItem[] = [];\n\tabi.forEach((element: AbiItem) => {\n\t\tif (element.type === 'function') {\n\t\t\ttemp.push(element);\n\t\t}\n\t});\n\treturn temp;\n}\n\nfunction getArguments(abi: AbiItem | null, args: { [key: string]: string }) {\n\tconst temp: string[] = [];\n\tif (abi) {\n\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\ttemp.push(args[item.name]);\n\t\t});\n\t}\n\treturn temp;\n}\n\ninterface InterfaceProps {\n\tcaver: any;\n\tnetworkId: number;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\taddNewContract: (contract: InterfaceContract) => void; // for SmartContracts\n\tsetSelected: (select: InterfaceContract) => void; // for At Address\n\tupdateBalance: (address: string) => void;\n}\n\nconst Compiler: React.FunctionComponent<InterfaceProps> = ({\n\tcaver,\n\tnetworkId,\n\tbusy,\n\tsetBusy,\n\taddNewContract,\n\tsetSelected,\n\tupdateBalance,\n}) => {\n\tconst [initialised, setInitialised] = React.useState<boolean>(false);\n\tconst [client, setClient] = React.useState<Client<Api, Readonly<IRemixApi>> | undefined | null>(null);\n\tconst [fileName, setFileName] = React.useState<string>('');\n\tconst [iconSpin, setIconSpin] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<{ fileName: string; data: { [key: string]: any } }>({\n\t\tfileName: '',\n\t\tdata: {},\n\t});\n\tconst [contractName, setContractName] = React.useState<string>('');\n\tconst [constructor, setConstructor] = React.useState<AbiItem | null>(null);\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst [address, setAddress] = React.useState<string>('');\n\tconst [error, setError] = React.useState<string>('');\n\n\tReact.useEffect(() => {\n\t\tasync function init() {\n\t\t\tsetInitialised(true);\n\t\t\tconst temp = createClient();\n\t\t\tawait temp.onload();\n\t\t\ttemp.solidity.on('compilationFinished', (fn: string, source: any, languageVersion: string, data: any) => {\n\t\t\t\t// console.log(fn, source, languageVersion, data);\n\t\t\t\tsetContracts({ fileName: fn, data: data.contracts[fn] });\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tselect(\n\t\t\t\t\tObject.keys(data.contracts[fn]).length > 0 ? Object.keys(data.contracts[fn])[0] : '',\n\t\t\t\t\tdata.contracts[fn]\n\t\t\t\t);\n\t\t\t});\n\t\t\ttemp.on('fileManager', 'currentFileChanged', (fn: string) => {\n\t\t\t\tsetFileName(fn);\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tsetFileName(await temp.fileManager.getCurrentFile());\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Error from IDE : No such file or directory No file selected');\n\t\t\t}\n\t\t\tsetClient(temp);\n\t\t}\n\t\tsetAddress('');\n\t\tif (!initialised) {\n\t\t\t// setCompilerConfig(version, optimize);\n\t\t\tinit();\n\t\t}\n\t\t// eslint-disable-next-line\n  }, [networkId]);\n\n\tasync function compile() {\n\t\tsetBusy(true);\n\t\tsetIconSpin('fa-spin');\n\t\tawait client?.solidity.compile(fileName);\n\t\tsetIconSpin('');\n\t\tsetBusy(false);\n\t}\n\n\tfunction select(name: string, newContracts: { [key: string]: any } | null = null) {\n\t\tconst abi = newContracts ? newContracts[name].abi : contracts.data[name].abi;\n\t\tsetContractName(name);\n\t\tsetConstructor(null);\n\t\tsetArgs({});\n\t\tabi.forEach((element0: AbiItem) => {\n\t\t\tif (element0.type === 'constructor') {\n\t\t\t\tconst temp: { [key: string]: string } = {};\n\t\t\t\telement0.inputs?.forEach((element1: AbiInput) => {\n\t\t\t\t\ttemp[element1.name] = '';\n\t\t\t\t});\n\t\t\t\tsetArgs(temp);\n\t\t\t\tsetConstructor(element0);\n\t\t\t}\n\t\t});\n\t\tsetSelected({ name, address: '', abi: getFunctions(abi) });\n\t}\n\n\tasync function onDeploy() {\n\t\tif (!busy && caver) {\n\t\t\tsetBusy(true);\n\t\t\tsetAddress('');\n\t\t\ttry {\n\t\t\t\tconst newContract = new caver.klay.Contract(JSON.parse(JSON.stringify(contracts.data[contractName].abi)));\n\t\t\t\tconst accounts = await caver.klay.getAccounts();\n\t\t\t\tconst parms: string[] = getArguments(constructor, args);\n\t\t\t\tconst rawTx = {\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tdata: newContract\n\t\t\t\t\t\t.deploy({ data: `0x${contracts.data[contractName].evm.bytecode.object}`, arguments: parms })\n\t\t\t\t\t\t.encodeABI(),\n\t\t\t\t};\n\t\t\t\tconst gas = await caver.klay.estimateGas(rawTx);\n\t\t\t\tconst gasLimit = parseInt((caver.utils.hexToNumber(gas) * 1.5).toString(), 10).toString();\n\t\t\t\tconst txReceipt = await caver.klay.sendTransaction({\n\t\t\t\t\ttype: 'SMART_CONTRACT_DEPLOY',\n\t\t\t\t\tvalue: 0, // TODO\n\t\t\t\t\tgas: gasLimit,\n\t\t\t\t\t...rawTx,\n\t\t\t\t});\n\t\t\t\tif (txReceipt.contractAddress) {\n\t\t\t\t\tsetAddress(txReceipt.contractAddress);\n\t\t\t\t\taddNewContract({\n\t\t\t\t\t\tname: contractName,\n\t\t\t\t\t\taddress: txReceipt.contractAddress,\n\t\t\t\t\t\tabi: getFunctions(contracts.data[contractName].abi),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsetError('contractAddress error');\n\t\t\t\t}\n\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line\n        \t\tconsole.error(e)\n\t\t\t\tsetError('deploy error');\n\t\t\t}\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tfunction Contracts() {\n\t\tconst { data } = contracts;\n\t\tconst value = contracts.fileName.split('/')[contracts.fileName.split('/').length - 1];\n\t\tconst items = Object.keys(data).map((key) => <option key={key} value={key}>{`${key} - ${value}`}</option>);\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t<small>CONTRACT</small>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\t\tdisabled={!contracts.data[contractName]}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (contracts.data[contractName]) {\n\t\t\t\t\t\t\t\t\tcopy(JSON.stringify(contracts.data[contractName].abi, null, 4));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Text>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tvalue={contractName}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tselect(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{items}\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"Compiler\">\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tawait compile();\n\t\t\t\t}}\n\t\t\t\tblock\n\t\t\t\tdisabled={fileName === '' || iconSpin !== ''}\n\t\t\t>\n\t\t\t\t<i className={`fas fa-sync ${iconSpin}`} style={{ marginRight: '0.3em' }} />\n\t\t\t\t<span>\n\t\t\t\t\tCompile&nbsp;\n\t\t\t\t\t{`${fileName === '' ? '<no file selected>' : fileName.split('/')[fileName.split('/').length - 1]}`}\n\t\t\t\t</span>\n\t\t\t</Button>\n\t\t\t<hr />\n\t\t\t<Contracts />\n\t\t\t<Card>\n\t\t\t\t<Card.Header className=\"p-2\">Deploy</Card.Header>\n\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t<Method\n\t\t\t\t\t\tabi={constructor}\n\t\t\t\t\t\tsetArgs={(name: string, value: string) => {\n\t\t\t\t\t\t\targs[name] = value;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t\t\t<small>{error}</small>\n\t\t\t\t\t</Alert>\n\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control value={address} placeholder=\"contract address\" size=\"sm\" readOnly />\n\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t<Button variant=\"warning\" block size=\"sm\" disabled={busy || !caver || fileName === ''} onClick={onDeploy}>\n\t\t\t\t\t\t\t\t<small>Deploy</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Compiler;\n","import React from 'react';\nimport { Alert, Accordion, Button, Card, Form, InputGroup } from 'react-bootstrap';\nimport copy from 'copy-to-clipboard';\nimport { CSSTransition } from 'react-transition-group';\nimport { AbiInput, AbiItem } from 'web3-utils';\nimport { InterfaceContract } from './Types';\nimport Method from './Method';\nimport './animation.css';\n\nconst EMPTYLIST = 'Currently you have no contract instances to interact with.';\n\ninterface InterfaceDrawMethodProps {\n\tcaver: any;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tabi: AbiItem;\n\taddress: string;\n\tupdateBalance: (address: string) => void;\n}\n\nconst DrawMethod: React.FunctionComponent<InterfaceDrawMethodProps> = (props) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [success, setSuccess] = React.useState<string>('');\n\tconst [value, setValue] = React.useState<string>('');\n\tconst [args, setArgs] = React.useState<{ [key: string]: string }>({});\n\tconst { caver, busy, /* setBusy, */ abi, address, updateBalance } = props;\n\n\tReact.useEffect(() => {\n\t\tconst temp: { [key: string]: string } = {};\n\t\tabi.inputs?.forEach((element: AbiInput) => {\n\t\t\ttemp[element.name] = '';\n\t\t});\n\t\tsetArgs(temp);\n\t}, [abi.inputs]);\n\n\tfunction buttonVariant(stateMutability: string | undefined): string {\n\t\tswitch (stateMutability) {\n\t\t\tcase 'view':\n\t\t\tcase 'pure':\n\t\t\t\treturn 'primary';\n\t\t\tcase 'nonpayable':\n\t\t\t\treturn 'warning';\n\t\t\tcase 'payable':\n\t\t\t\treturn 'danger';\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn '';\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Method\n\t\t\t\tabi={abi}\n\t\t\t\tsetArgs={(name: string, value2: string) => {\n\t\t\t\t\targs[name] = value2;\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Alert variant=\"danger\" onClose={() => setError('')} dismissible hidden={error === ''}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t<Alert variant=\"success\" onClose={() => setSuccess('')} dismissible hidden={success === ''}>\n\t\t\t\t<small>{success}</small>\n\t\t\t</Alert>\n\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || !caver}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t// setBusy(true)\n\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst newContract = new caver.klay.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\tconst accounts = await caver.klay.getAccounts();\n\t\t\t\t\t\t\tif (abi.stateMutability === 'view' || abi.stateMutability === 'pure') {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst txReceipt = abi.name\n\t\t\t\t\t\t\t\t\t\t? await newContract.methods[abi.name](...parms).call({ from: accounts[0] })\n\t\t\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\t\t\tif (typeof txReceipt === 'object') {\n\t\t\t\t\t\t\t\t\t\tsetSuccess(JSON.stringify(txReceipt, null, 4));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetValue(txReceipt);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e: any) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (abi.name) {\n\t\t\t\t\t\t\t\t\t\tconst rawTx = {\n\t\t\t\t\t\t\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\t\t\t\t\t\t\tto: address,\n\t\t\t\t\t\t\t\t\t\t\tdata: newContract.methods[abi.name](...parms).encodeABI(),\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tconst gas = await caver.klay.estimateGas(rawTx);\n\t\t\t\t\t\t\t\t\t\tconst gasLimit = parseInt((caver.utils.hexToNumber(gas) * 1.5).toString(), 10).toString();\n\t\t\t\t\t\t\t\t\t\tconst txReceipt = await caver.klay.sendTransaction({\n\t\t\t\t\t\t\t\t\t\t\ttype: 'SMART_CONTRACT_EXECUTION',\n\t\t\t\t\t\t\t\t\t\t\tvalue: 0, // TODO\n\t\t\t\t\t\t\t\t\t\t\tgas: gasLimit,\n\t\t\t\t\t\t\t\t\t\t\t...rawTx,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t// console.log(txReceipt)\n\t\t\t\t\t\t\t\t\t\tsetError('');\n\t\t\t\t\t\t\t\t\t\tsetSuccess(JSON.stringify(txReceipt, null, 2));\n\t\t\t\t\t\t\t\t\t\tupdateBalance(accounts[0]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetError('abi name error');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// TODO: LOG\n\t\t\t\t\t\t\t\t} catch (e: any) {\n\t\t\t\t\t\t\t\t\t// console.error(error)\n\t\t\t\t\t\t\t\t\tsetError(e.message ? e.message : e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// setBusy(false)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<small>{abi.stateMutability === 'view' || abi.stateMutability === 'pure' ? 'call' : 'transact'}</small>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={buttonVariant(abi.stateMutability)}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tclassName=\"mt-0 pt-0 float-right\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (abi.name) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst parms: string[] = [];\n\t\t\t\t\t\t\t\t\tabi.inputs?.forEach((item: AbiInput) => {\n\t\t\t\t\t\t\t\t\t\tif (args[item.name]) {\n\t\t\t\t\t\t\t\t\t\t\tparms.push(args[item.name]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconst newContract = new caver.klay.Contract(JSON.parse(JSON.stringify([abi])), address);\n\t\t\t\t\t\t\t\t\tcopy(newContract.methods[abi.name](...parms).encodeABI());\n\t\t\t\t\t\t\t\t} catch (e: any) {\n\t\t\t\t\t\t\t\t\tconsole.log(e.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"far fa-copy\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<Form.Control\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\treadOnly\n\t\t\t\t\thidden={!(abi.stateMutability === 'view' || abi.stateMutability === 'pure')}\n\t\t\t\t/>\n\t\t\t</InputGroup>\n\t\t</>\n\t);\n};\n\nconst ContractCard: React.FunctionComponent<{\n\tcaver: any;\n\tnetworkId: number;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tcontract: InterfaceContract;\n\tindex: number;\n\tremove: () => void;\n\tupdateBalance: (address: string) => void;\n}> = ({ caver, networkId, busy, setBusy, contract, index, remove, updateBalance }) => {\n\tconst [enable, setEnable] = React.useState<boolean>(true);\n\n\tfunction DrawMathods() {\n\t\tconst list = contract.abi ? contract.abi : [];\n\t\tconst items = list.map((abi: AbiItem, id: number) => (\n\t\t\t<Accordion key={`Methods_A_${index.toString()}`}>\n\t\t\t\t<Card>\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey={`Methods_${id}`} className=\"p-1\">\n\t\t\t\t\t\t<small>{abi.name}</small>\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t<Accordion.Collapse eventKey={`Methods_${id}`}>\n\t\t\t\t\t\t<Card.Body className=\"py-1 px-2\">\n\t\t\t\t\t\t\t<DrawMethod\n\t\t\t\t\t\t\t\tcaver={caver}\n\t\t\t\t\t\t\t\tbusy={busy}\n\t\t\t\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\t\t\t\tabi={abi}\n\t\t\t\t\t\t\t\taddress={contract.address}\n\t\t\t\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<CSSTransition in={enable} timeout={300} classNames=\"zoom\" unmountOnExit onExited={remove}>\n\t\t\t<Card className=\"mb-2\">\n\t\t\t\t<Card.Header className=\"px-2 py-1\">\n\t\t\t\t\t<strong className=\"align-middle\">{contract.name}</strong>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<small className=\"align-middle\">{`${contract.address.substring(0, 6)}...${contract.address.substring(\n\t\t\t\t\t\t38\n\t\t\t\t\t)}`}</small>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tswitch (networkId) {\n\t\t\t\t\t\t\t\tcase 8217:\n\t\t\t\t\t\t\t\t\twindow.open(`https://scope.scope.klaytn.com/account/${contract.address}`);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 1001:\n\t\t\t\t\t\t\t\t\twindow.open(`https://baobab.scope.klaytn.com/account/${contract.address}`);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-external-link-alt\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right align-middle\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetEnable(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-trash-alt\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Header>\n\t\t\t\t{DrawMathods()}\n\t\t\t</Card>\n\t\t</CSSTransition>\n\t);\n};\n\ninterface InterfaceSmartContractsProps {\n\tcaver: any;\n\tnetworkId: number;\n\tbusy: boolean;\n\tsetBusy: (state: boolean) => void;\n\tcontracts: InterfaceContract[];\n\tupdateBalance: (address: string) => void;\n}\n\nconst SmartContracts: React.FunctionComponent<InterfaceSmartContractsProps> = ({\n\tcaver,\n\tnetworkId,\n\tbusy,\n\tsetBusy,\n\tcontracts,\n\tupdateBalance,\n}) => {\n\tconst [error, setError] = React.useState<string>('');\n\tconst [count, setCount] = React.useState<number>(0);\n\n\tReact.useEffect(() => {\n\t\tsetCount(0);\n\t\tsetError(EMPTYLIST);\n\t}, [contracts, busy]);\n\n\tfunction DrawContracts() {\n\t\tconst items = contracts.map((data: InterfaceContract, index: number) => (\n\t\t\t<ContractCard\n\t\t\t\tcaver={caver}\n\t\t\t\tnetworkId={networkId}\n\t\t\t\tbusy={busy}\n\t\t\t\tsetBusy={setBusy}\n\t\t\t\tcontract={data}\n\t\t\t\tindex={index}\n\t\t\t\tremove={() => {\n\t\t\t\t\tsetCount(count + 1);\n\t\t\t\t\tsetError(EMPTYLIST);\n\t\t\t\t}}\n\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\tkey={`Contract_${index.toString()}`}\n\t\t\t/>\n\t\t));\n\t\treturn <>{items}</>;\n\t}\n\n\treturn (\n\t\t<div className=\"SmartContracts\">\n\t\t\t<Alert variant=\"warning\" className=\"text-center\" hidden={contracts.length !== count}>\n\t\t\t\t<small>{error}</small>\n\t\t\t</Alert>\n\t\t\t{DrawContracts()}\n\t\t</div>\n\t);\n};\n\nexport default SmartContracts;\n","import React from 'react';\nimport { Container, Form, InputGroup, Tooltip, Button, OverlayTrigger } from 'react-bootstrap';\nimport Compiler from './components/Compiler';\nimport SmartContracts from './components/SmartContracts';\nimport { InterfaceContract } from './components/Types';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst Caver = require('caver-js');\n\nconst App: React.FunctionComponent = () => {\n\tconst [account, setAccount] = React.useState<string>('');\n\tconst [balance, setBalance] = React.useState<string>('');\n\tconst [networkId, setNetworkId] = React.useState<number>(0);\n\tconst [busy, setBusy] = React.useState<boolean>(false);\n\tconst [caver] = React.useState<any>(\n\t\t(window as { [key: string]: any }).klaytn ? new Caver((window as { [key: string]: any }).klaytn) : null\n\t);\n\tconst [atAddress, setAtAddress] = React.useState<string>('');\n\tconst [contracts, setContracts] = React.useState<InterfaceContract[]>([]);\n\tconst [selected, setSelected] = React.useState<InterfaceContract | null>(null);\n\n\tReact.useEffect(() => {\n\t\tupdateBalance(account);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [account]);\n\n\tasync function connect() {\n\t\tif (caver && !account) {\n\t\t\tsetBusy(true);\n\t\t\tconst provider = (window as { [key: string]: any }).klaytn;\n\t\t\tconst accounts = await provider.enable();\n\t\t\tif (accounts.length) {\n\t\t\t\tsetAccount(accounts[0]);\n\t\t\t}\n\t\t\tconst { klaytn } = window as { [key: string]: any };\n\t\t\tif (klaytn) {\n\t\t\t\tklaytn.on('networkChanged', () => {\n\t\t\t\t\tsetNetworkId(parseInt(klaytn.networkVersion, 10));\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetBusy(false);\n\t\t}\n\t}\n\n\tasync function updateBalance(address: string) {\n\t\tif (address !== '') {\n\t\t\tconst b = await caver.klay.getBalance(account);\n\t\t\tsetBalance(caver.utils.fromWei(b));\n\t\t}\n\t}\n\n\tfunction addNewContract(contract: InterfaceContract) {\n\t\tsetContracts(contracts.concat([contract]));\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>ACCOUNT</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Account\" value={account} size=\"sm\" readOnly />\n\t\t\t\t\t\t\t<InputGroup.Append hidden={account !== ''}>\n\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t<Tooltip id=\"overlay-connect\" hidden={account !== ''}>\n\t\t\t\t\t\t\t\t\t\t\tConnect to Wallet\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button variant=\"warning\" block size=\"sm\" disabled={busy} onClick={connect}>\n\t\t\t\t\t\t\t\t\t\t<small>Connect</small>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t<small>BALANCE (KLAY)</small>\n\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Account\" value={balance} size=\"sm\" readOnly />\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t</Form>\n\t\t\t\t<hr />\n\t\t\t\t<Compiler\n\t\t\t\t\tcaver={account ? caver : null}\n\t\t\t\t\tnetworkId={networkId}\n\t\t\t\t\tbusy={busy}\n\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\taddNewContract={addNewContract}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t\tupdateBalance={updateBalance}\n\t\t\t\t/>\n\t\t\t\t<p className=\"text-center mt-3\">\n\t\t\t\t\t<small>OR</small>\n\t\t\t\t</p>\n\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tvalue={atAddress}\n\t\t\t\t\t\tplaceholder=\"contract address\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetAtAddress(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t/>\n\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\toverlay={<Tooltip id=\"overlay-ataddresss\">Use deployed Contract address</Tooltip>}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tdisabled={busy || account === '' || !selected}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetBusy(true);\n\t\t\t\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\t\t\t\taddNewContract({ ...selected, address: atAddress });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetBusy(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>At Address</small>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t</InputGroup>\n\t\t\t\t<hr />\n\t\t\t\t<SmartContracts\n\t\t\t\t\tcaver={account ? caver : null}\n\t\t\t\t\tnetworkId={networkId}\n\t\t\t\t\tbusy={busy}\n\t\t\t\t\tsetBusy={setBusy}\n\t\t\t\t\tcontracts={contracts}\n\t\t\t\t\tupdateBalance={(a) => updateBalance(a)}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}